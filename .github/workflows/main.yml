name: CICD

# Define variables for GitHub username and repository name
env:
  github_username: filippajohnsson
  repository_name: pyhtoncreateprofiles

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  id-token: write
  pages: write
  contents: read
  
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!      
            
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install faker

      # Create csv file (glÃ¶m inte pip install)
      - name: Generate CSV file
        run: |
          python generate.py

      # Create JSON file
      - name: Convert CSV to JSON
        run: |
          python csvtojson.py

      # Run unit tests
      - name: Run unit tests
        run: |
          find . -name '*Tests.py' -exec python -m unittest {} +

      - name: Check test results and break the build if tests fail, only for being sure.
        run: |
          if [ $? -ne 0 ]; then
            echo "Unit tests failed. Breaking the build."
            exit 1
          fi

      - name: Copy to dist
        run: |
          mkdir -p dist
          cp -f index.html dist/index.html
          cp -f data.json dist/data.json
          cp -f script.js dist/script.js
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          enablement: true
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # Store the URL of the deployed site as an output
      - name: Set Pages URL
        # Only run this step if the deployment was successful
        if: success()
        run: echo "pages_url=https://${{ env.github_username }}.github.io/${{ env.repository_name }}/" >> $GITHUB_ENV

# Output the URL of the deployed site
# This will be displayed as the job completion message
# You can access it using ${{ env.pages_url }}
    env:
      pages_url: ${{ env.pages_url }}